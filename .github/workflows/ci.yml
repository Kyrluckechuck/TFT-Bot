name: Main CI

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: [windows-latest]
    strategy:
      matrix:
        python-version: [
          "3.11"
        ]
    outputs:
      version: ${{ steps.getversion.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      # - name: Set Up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}
      #     cache: 'pip'
      # - name: Install Dependencies
      #   run: pip install -r requirements.txt
      # - run: python installer.py
      # - name: Upload build
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: tft-bot-build
      #     path: dist/TFT Bot.exe
      - name: cat VERSION file
        run: cat VERSION
      - name: Read VERSION file
        id: getversion
        run: echo \"version=$(cat VERSION)\" >> $GITHUB_OUTPUT

      - name: DEBUG| Echo Version1
        run: echo "${{ steps.getversion.outputs.version }}"

  # Only perform release when manually triggered and on main branch
  release:
  #  && github.ref == 'refs/heads/main'
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: build
    runs-on: [windows-latest]
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: tft-bot-build
          path: dist/TFT Bot.exe
      - name: Generate build number
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{secrets.github_token}}
      - name: DEBUG| Echo Version2
        run: echo "${{ needs.build.outputs.version }}"
      - uses: xresloader/upload-to-github-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "dist/TFT Bot.exe"
          branches: "main"
          verbose: true
          # prerelease: true
          draft: true
          tag_name: v${{ needs.build.outputs.version }}.${{ steps.buildnumber.outputs.build_number }}
          default_release_name: v${{ needs.build.outputs.version }}.${{ steps.buildnumber.outputs.build_number }}
